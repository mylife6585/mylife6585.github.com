[{"categories":["devops"],"content":"现象 nginx反向代理请求到阿里云oss,\n静态资源请求小概率404\n直接请求oss 静态资源 没问题\n分析 错误日志   2022/12/15 02:52:10 [error] 44#44: *9122 connect() failed (111: Connection refused) while connecting to upstream, client: 172.18.162.129, server: , request: “GET /dist/bundle.1670.4b095fc535ccd1d37d6f.js HTTP/1.1”, upstream: “https://113.96.179.225:443/web-xzlzs/dist/bundle.1670.4b095fc535ccd1d37d6f.js”, host: “yxzl-test.yuexiuproperty.cn”, referrer: “https://yxzl-test.yuexiuproperty.cn/?code=lhGGZ2vmuyTzOwpD4t6ToM4t1tOTyfn6\u0026state=1671010519736\" 2022/12/15 02:52:10 [error] 44#44: *9122 open() “/usr/share/nginx/html/50x.html” failed (2: No such file or directory), client: 172.18.162.129, server: , request: “GET /dist/bundle.1670.4b095fc535ccd1d37d6f.js HTTP/1.1”, upstream: “https://113.96.179.225:443/web-xzlzs/dist/bundle.1670.4b095fc535ccd1d37d6f.js”, host: “yxzl-test.yuexiuproperty.cn”, referrer: “https://yxzl-test.yuexiuproperty.cn/?code=lhGGZ2vmuyTzOwpD4t6ToM4t1tOTyfn6\u0026state=1671010519736\"\n 404 不是直接原因\n 反向代理请求 出现错误  不同的域名解析导致？ 多个cdn地址？\n测试不是该原因\n资源限制？  服务端 请求限制？\n同样的镜像，本地跑起来测试正常，不是阿里云的限制\n客户端\n怀疑qos限制，去除cpu、内存限制正常\n中间\n未测试\n解决  resources: limits: cpu: \"1\" memory: 1000Mi requests: cpu: 100m memory: 50Mi 改成\n resources: limits: cpu: \"1\" memory: 1000Mi requests: cpu: 100m memory: 150Mi ","description":"小概率访问静态资源404","tags":["nginx","qos"],"title":"Sometimes 404","uri":"/posts/sometimes-404/"},{"categories":["devops"],"content":"现象 微信回调接口失败，curl、postman 正常\n分析 编辑istio configmap显示ingress-gateway 日志\nkubectl edit configmap -n istio-system\n增加\ndata: mesh: |- accessLogEncoding: JSON accessLogFile: /dev/stdout ingress-gateway 日志\n{ \"downstream_remote_address\":\"172.23.249.64:12982\", \"route_name\":null, \"bytes_received\":0, \"upstream_local_address\":null, \"bytes_sent\":0, \"duration\":0, \"response_flags\":\"-\", \"protocol\":\"HTTP/1.0\", \"downstream_local_address\":\"172.23.141.49:8443\", \"upstream_service_time\":null, \"upstream_host\":null, \"request_id\":null, \"x_forwarded_for\":null, \"requested_server_name\":\"base-app.creams.io\", \"start_time\":\"2022-09-07T07:38:52.549Z\", \"authority\":\"base-app.creams.io\", \"path\":\"/api/wechat-bridge/event/callback?signature=89e1e32c0d51d3834754a70b67fd878354724e93\u0026echostr=5512910522763997071\u0026timestamp=1662536332\u0026nonce=790690840\", \"response_code\":426, \"upstream_transport_failure_reason\":null, \"method\":\"GET\", \"upstream_cluster\":null, \"connection_termination_details\":null, \"user_agent\":\"Mozilla/4.0\", \"response_code_details\":\"low_version\" } 通过日志可以知道是因为微信回调的时候使用HTTP1.0 ，istio默认不支持导致\n解决 通过环境变量，设置istio envoy 支持http1.0\nkubectl edit deploy -n istio-system 增加环境变量 PILOT_HTTP10 为 1。\n参考 https://xie.infoq.cn/article/9fd56ee9a0a8f177394d9b9d9\nhttps://makeoptim.com/istio-faq/istio-support-http10#:~:text=Istio%20%E9%BB%98%E8%AE%A4%E5%8F%AA%E6%94%AF%E6%8C%81HTTP,%E5%B9%B6%E4%B8%8D%E6%94%AF%E6%8C%81HTTP%2F1.0%E3%80%82\n","description":"istio环境微信回调失败","tags":["istio","wechat"],"title":"Weichat Callback Failure","uri":"/posts/weichat-callback-failure/"},{"categories":["devops"],"content":"创建password文件 htpasswd -c /tmp/password username 修改deployment.yaml ，通过lifecycle增加认证  lifecycle: postStart: exec: command: [\"/bin/sh\", \"-c\", 'echo username:password \u003e /etc/nginx/.htpasswd;sed -i \"/sendfile/a\\ auth_basic_user_file /etc/nginx/.htpasswd;\" /etc/nginx/nginx.conf;sed -i \"/sendfile/a\\ auth_basic \\\"Restricted Content\\\";\" /etc/nginx/nginx.conf'] username:password 替换成真实数据，密码中如果包含$等特殊字符，需要\\ 转义\n","description":"Swagger ui增加认证","tags":["swaggerui","k8s"],"title":"Swagger Ui Basic Auth","uri":"/posts/swagger-ui-basic-auth/"},{"categories":["devops"],"content":"book.test.io实现oauth鉴权\n通过cookie中的自定义cookie TESTAccessToken鉴权，\n鉴权失败，跳转登录页面，登录成功把access_token设置到cookie TESTAccessToken\nopm install ledgetech/lua-resty-http #nginx.conf resolver 114.114.114.114; lua_ssl_verify_depth 10; lua_ssl_trusted_certificate '/etc/ssl/certs/ca-certificates.crt'; init_by_lua_block { require('oauth2').init({ code_endpoint = 'https://accounts.test.io/oauth/authorize', token_endpoint = 'https://accounts.test.io/oauth/token', validate_endpoint = 'https://accounts.test.io/users/info/me', redirect_uri = 'https://book.test.io/oauth2/callback', start_uri = 'https://book.test.io/', client_id = 'client_id', client_secret = 'secret', scope = 'TEST', response_type = 'code', }) } server { listen 80; location = /validate { content_by_lua_block { local access_token = ngx.var.cookie_TESTAccessToken if access_token then local resp_status_code = require('oauth2').validate(access_token) ngx.log(ngx.ERR,resp_status_code) if resp_status_code == 200 then ngx.exit(ngx.HTTP_OK) else ngx.exit(ngx.HTTP_UNAUTHORIZED) end else ngx.exit(ngx.HTTP_UNAUTHORIZED) end } } location @error401 { content_by_lua_block { return require('oauth2').get_code() } } location / { auth_request /validate; proxy_pass http://pro-gitbook-service:4000; error_page 401 = @error401; } location /oauth2/callback { content_by_lua_block { return require('oauth2').set_cookie(ngx.var.arg_code) } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91  #oauth.lua -- resty/lua/oauth2.lua local cjson = require('cjson.safe') cjson.encode_empty_table_as_object(false) local http = require(\"resty.http\") local M = {} local _conf = nil local function code_url() local params = ngx.encode_args({ client_id = _conf.client_id, redirect_uri = _conf.redirect_uri, scope = _conf.scope, response_type = _conf.response_type, }) return _conf.code_endpoint .. '?' .. params end local function get_token(code) local params = ngx.encode_args({ code = code, client_id = _conf.client_id, client_secret = _conf.client_secret, grant_type = 'authorization_code', redirect_uri = _conf.redirect_uri, }) local httpc = http.new() local res, err = httpc:request_uri(_conf.token_endpoint, { method = \"POST\", headers = { [\"Content-Type\"] = \"application/x-www-form-urlencoded\", }, body = params, }) if not res then ngx.log(ngx.ERR, \"request failed: \", err) return end local status = res.status local length = res.headers[\"Content-Length\"] local body = res.body return cjson.decode(body)['access_token'] end function M.validate(token) local httpc = http.new() local res, err = httpc:request_uri(_conf.validate_endpoint, { method = \"GET\", headers = { [\"Content-Type\"] = \"application/json\", [\"Authorization\"] = 'Bearer ' .. token }, }) if not res then ngx.log(ngx.ERR, \"request failed: \", err) return 401 end local status = res.status local length = res.headers[\"Content-Length\"] local body = res.body return status end function M.get_code() return ngx.redirect(code_url()) end function M.set_cookie(code) local access_token = get_token(code) ngx.log(ngx.ERR,access_token) ngx.header[\"Set-Cookie\"] = \"TESTAccessToken=\"..access_token..\"; path=/;Max-Age=86400\" ngx.redirect(_conf.start_uri) end function M.init(conf) _conf = conf end return M   ","description":"oauth2 proxy","tags":["oauth2","openresty"],"title":"Oauth2 Proxy","uri":"/posts/oauth2-proxy/"},{"categories":["devops"],"content":"部署 minio docker run -it -d \\ -p 9000:9000 \\ -p 9001:9001 \\ --name minio \\ -e MINIO_ROOT_USER=username \\ -e MINIO_ROOT_PASSWORD=password \\ -v /souban/data/minio:/data \\ quay.io/minio/minio server /data --console-address \":9001\" thumbor docker run -it -d \\ -p 80:80 \\ --name thumbor \\ -v /souban/data/thumbor/app:/app \\ minimalcompact/thumbor app目录中包含两个文件\n.aws/credentials 中填写minio的用户名密码\n[default] aws_access_key_id = username aws_secret_access_key = password thumbor.conf 增加\n将默认的Amazon S3地址换成minio运行地址 TC_AWS_ENDPOINT='http://10.18.0.95:9000’\n将Thumbor的loader换成tc_aws.loaders.s3_loader LOADER = ‘tc_aws.loaders.s3_loader’\n ################################### Logging #################################### ## Logging configuration as json ## Defaults to: None THUMBOR_LOG_CONFIG = None ## Log Format to be used by thumbor when writing log messages. ## Defaults to: %(asctime)s %(name)s:%(levelname)s %(message)s THUMBOR_LOG_FORMAT = '%(asctime)s %(name)s:%(levelname)s %(message)s' ## Date Format to be used by thumbor when writing log messages. ## Defaults to: %Y-%m-%d %H:%M:%S THUMBOR_LOG_DATE_FORMAT = '%Y-%m-%d %H:%M:%S' ################################################################################ ################################### Imaging #################################### ## Max width in pixels for images read or generated by thumbor ## Defaults to: 0 MAX_WIDTH = 0 ## Max height in pixels for images read or generated by thumbor ## Defaults to: 0 MAX_HEIGHT = 0 ## Max pixel count for images read by thumbor. Set to prevent decompression bomb DOS attack. ## Defaults to: 75000000 pixels MAX_PIXELS = 75000000 ## Min width in pixels for images read or generated by thumbor ## Defaults to: 1 MIN_WIDTH = 1 ## Min width in pixels for images read or generated by thumbor ## Defaults to: 1 MIN_HEIGHT = 1 ## Allowed domains for the http loader to download. These are regular ## expressions. ## Defaults to: [] ALLOWED_SOURCES = [] ## Quality index used for generated JPEG images ## Defaults to: 80 QUALITY = 80 ## Exports JPEG images with the progressive flag set. ## Defaults to: True PROGRESSIVE_JPEG = True ## Specify subsampling behavior for Pillow (see `subsampling` in ## http://pillow.readthedocs.org/en/latest/handbook/image-file- ## formats.html#jpeg).Be careful to use int for 0,1,2 and string for \"4:4:4\" ## notation. Will ignore `quality`. Using `keep` will copy the original file's ## subsampling. ## Defaults to: None PILLOW_JPEG_SUBSAMPLING = None ## Specify quantization tables for Pillow (see `qtables` in ## http://pillow.readthedocs.org/en/latest/handbook/image-file- ## formats.html#jpeg). Will ignore `quality`. Using `keep` will copy the ## original file's qtables. ## Defaults to: None PILLOW_JPEG_QTABLES = None ## Specify resampling filter for Pillow resize method.One of LANCZOS, NEAREST, ## BILINEAR, BICUBIC, HAMMING (Pillow\u003e=3.4.0). ## Defaults to: 'LANCZOS' PILLOW_RESAMPLING_FILTER = 'LANCZOS' ## Quality index used for generated WebP images. If not set (None) the same level ## of JPEG quality will be used. ## Defaults to: None WEBP_QUALITY = None ## Compression level for generated PNG images. ## Defaults to: 6 PNG_COMPRESSION_LEVEL = 6 ## Specifies whether WebP format should be used automatically if the request ## accepts it (via Accept header) ## Defaults to: False AUTO_WEBP = False ## Specifies whether non-transparent PNG images should be automatically converted to JPEG ## Defaults to: False AUTO_PNG_TO_JPG = False ## Specify the ratio between 1in and 1px for SVG images. This is only used ## whenrasterizing SVG images having their size units in cm or inches. ## Defaults to: 150 SVG_DPI = 150 ## Max AGE sent as a header for the image served by thumbor in seconds ## Defaults to: 86400 MAX_AGE = 86400 ## Indicates the Max AGE header in seconds for temporary images (images with ## failed smart detection) ## Defaults to: 0 MAX_AGE_TEMP_IMAGE = 0 ## Indicates whether thumbor should rotate images that have an Orientation EXIF ## header ## Defaults to: False RESPECT_ORIENTATION = False ## Ignore errors during smart detections and return image as a temp image (not ## saved in result storage and with MAX_AGE_TEMP_IMAGE age) ## Defaults to: False IGNORE_SMART_ERRORS = False ## Sends If-Modified-Since \u0026 Last-Modified headers; requires support from result ## storage ## Defaults to: False SEND_IF_MODIFIED_LAST_MODIFIED_HEADERS = False ## Preserves exif information in generated images. Increases image size in ## kbytes, use with caution. ## Defaults to: False PRESERVE_EXIF_INFO = False ## Indicates whether thumbor should enable the EXPERIMENTAL support for animated ## gifs. ## Defaults to: True ALLOW_ANIMATED_GIFS = True ## Indicates whether thumbor should use gifsicle engine. Please note that smart ## cropping and filters are not supported for gifs using gifsicle (but won't ## give an error). ## Defaults to: False USE_GIFSICLE_ENGINE = False ## Indicates whether thumbor should enable blacklist functionality to prevent ## processing certain images. ## Defaults to: False USE_BLACKLIST = False ## Size of the thread pool used for image transformations. The default value is ## 0 (don't use a threadpoool. Increase this if you are seeing your IOLoop ## getting blocked (often indicated by your upstream HTTP requests timing out) ## Defaults to: 0 ENGINE_THREADPOOL_SIZE = 0 ################################################################################ ################################ Extensibility ################################# ## The metrics backend thumbor should use to measure internal actions. This must ## be the full name of a python module (python must be able to import it) ## Defaults to: 'thumbor.metrics.logger_metrics' METRICS = 'thumbor.metrics.logger_metrics' ## The loader thumbor should use to load the original image. This must be the ## full name of a python module (python must be able to import it) ## Defaults to: thumbor.loaders.http_loader LOADER = 'thumbor.loaders.http_loader' ## The file storage thumbor should use to store original images. This must be the ## full name of a python module (python must be able to import it) ## Defaults to: thumbor.storages.file_storage STORAGE = 'thumbor.storages.file_storage' STORAGE_BUCKET = '' RESULT_STORAGE_BUCKET = '' ## The result storage thumbor should use to store generated images. This must be ## the full name of a python module (python must be able to import it) ## Defaults to: None RESULT_STORAGE = 'thumbor.result_storages.file_storage' ## The imaging engine thumbor should use to perform image operations. This must ## be the full name of a python module (python must be able to import it) ## Defaults to: thumbor.engines.pil ENGINE = 'thumbor.engines.pil' ## The gif engine thumbor should use to perform image operations. This must be ## the full name of a python module (python must be able to import it) ## Defaults to: 'thumbor.engines.gif' GIF_ENGINE = 'thumbor.engines.gif' ## The url signer thumbor should use to verify url signatures.This must be the ## full name of a python module (python must be able to import it) ## Defaults to: 'libthumbor.url_signers.base64_hmac_sha1' URL_SIGNER = 'libthumbor.url_signers.base64_hmac_sha1' ################################################################################ ################################### Security ################################### ## The security key thumbor uses to sign image URLs ## Defaults to: MY_SECURE_KEY SECURITY_KEY = 'MY_SECURE_KEY' ## Indicates if the /unsafe URL should be available ## Defaults to: True ALLOW_UNSAFE_URL = True ## Indicates if encrypted (old style) URLs should be allowed ## Defaults to: True ALLOW_OLD_URLS = True ## AWS access keys - used in thumbor_aws storage AWS_ACCESS_KEY = '' AWS_SECRET_KEY = '' ################################################################################ ##################################### HTTP ##################################### ## Enables automatically generated etags ## Defaults to: True ENABLE_ETAGS = True ################################################################################ ################################### Storage #################################### ## Set maximum id length for images when stored ## Defaults to: 32 MAX_ID_LENGTH = 32 ################################################################################ ################################### Metrics #################################### ## Host to send statsd instrumentation to ## Defaults to: None ## Port to send statsd instrumentation to ## Defaults to: 8125 STATSD_PORT = 8125 ## Prefix for statsd ## Defaults to: None ################################################################################ ################################# File Loader ################################## ## The root path where the File Loader will try to find images ## Defaults to: /tmp FILE_LOADER_ROOT_PATH = '/data/loader' ################################################################################ ################################# HTTP Loader ################################## ## The maximum number of seconds libcurl can take to connect to an image being ## loaded ## Defaults to: 5 HTTP_LOADER_CONNECT_TIMEOUT = 5 ## The maximum number of seconds libcurl can take to download an image ## Defaults to: 20 HTTP_LOADER_REQUEST_TIMEOUT = 20 ## Indicates whether libcurl should follow redirects when downloading an image ## Defaults to: True HTTP_LOADER_FOLLOW_REDIRECTS = True ## Indicates the number of redirects libcurl should follow when downloading an ## image ## Defaults to: 5 HTTP_LOADER_MAX_REDIRECTS = 5 ## The maximum number of simultaneous HTTP connections the loader can make before ## queuing ## Defaults to: 10 HTTP_LOADER_MAX_CLIENTS = 10 ## Whether thumbor should forward all client headers ## Defaults to: False HTTP_LOADER_FORWARD_ALL_HEADERS = False ## Indicates whether thumbor should forward the user agent of the requesting user ## Defaults to: False HTTP_LOADER_FORWARD_USER_AGENT = False ## A list of headers the http loader will forward from the client ## Defaults to: [] HTTP_LOADER_FORWARD_HEADERS_WHITELIST = [] ## Default user agent for thumbor http loader requests ## Defaults to: Thumbor/6.3.0 HTTP_LOADER_DEFAULT_USER_AGENT = 'Thumbor/6.3.0' ## The proxy host needed to load images through ## Defaults to: None HTTP_LOADER_PROXY_HOST = None ## The proxy port for the proxy host ## Defaults to: None HTTP_LOADER_PROXY_PORT = None ## The proxy username for the proxy host ## Defaults to: None HTTP_LOADER_PROXY_USERNAME = None ## The proxy password for the proxy host ## Defaults to: None HTTP_LOADER_PROXY_PASSWORD = None ## The filename of CA certificates in PEM format ## Defaults to: None HTTP_LOADER_CA_CERTS = None ## Validate the servers certificate for HTTPS requests ## Defaults to: True HTTP_LOADER_VALIDATE_CERTS = True ## The filename for client SSL key ## Defaults to: None HTTP_LOADER_CLIENT_KEY = None ## The filename for client SSL certificate ## Defaults to: None HTTP_LOADER_CLIENT_CERT = None ## If the CurlAsyncHTTPClient should be used ## Defaults to: False HTTP_LOADER_CURL_ASYNC_HTTP_CLIENT = False ################################################################################ ################################# File Storage ################################# ## Expiration in seconds for the images in the File Storage. Defaults to one ## month ## Defaults to: 2592000 STORAGE_EXPIRATION_SECONDS = 2592000 ## Indicates whether thumbor should store the signing key for each image in the ## file storage. This allows the key to be changed and old images to still be ## properly found ## Defaults to: False STORES_CRYPTO_KEY_FOR_EACH_IMAGE = False ## The root path where the File Storage will try to find images ## Defaults to: /tmp/thumbor/storage FILE_STORAGE_ROOT_PATH = '/data/storage' ################################################################################ #################################### Upload #################################### ## Max size in Kb for images uploaded to thumbor ## Aliases: MAX_SIZE ## Defaults to: 0 UPLOAD_MAX_SIZE = 0 ## Indicates whether thumbor should enable File uploads ## Aliases: ENABLE_ORIGINAL_PHOTO_UPLOAD ## Defaults to: False UPLOAD_ENABLED = False ## The type of storage to store uploaded images with ## Aliases: ORIGINAL_PHOTO_STORAGE ## Defaults to: thumbor.storages.file_storage UPLOAD_PHOTO_STORAGE = 'thumbor.storages.file_storage' ## Indicates whether image deletion should be allowed ## Aliases: ALLOW_ORIGINAL_PHOTO_DELETION ## Defaults to: False UPLOAD_DELETE_ALLOWED = False ## Indicates whether image overwrite should be allowed ## Aliases: ALLOW_ORIGINAL_PHOTO_PUTTING ## Defaults to: False UPLOAD_PUT_ALLOWED = False ## Default filename for image uploaded ## Defaults to: image UPLOAD_DEFAULT_FILENAME = 'image' ################################################################################ ############################### MongoDB Storage ################################ ## MongoDB storage server host ## Defaults to: localhost MONGO_STORAGE_SERVER_HOST = 'mongo' ## MongoDB storage server port ## Defaults to: 27017 MONGO_STORAGE_SERVER_PORT = 27017 ## MongoDB storage server database name ## Defaults to: thumbor MONGO_STORAGE_SERVER_DB = 'thumbor' ## MongoDB storage image collection ## Defaults to: images MONGO_STORAGE_SERVER_COLLECTION = 'images' ################################################################################ ################################ Redis Storage ################################# ## Redis storage server host ## Defaults to: localhost REDIS_STORAGE_SERVER_HOST = 'redis' ## Redis storage server port ## Defaults to: 6379 REDIS_STORAGE_SERVER_PORT = 6379 ## Redis storage database index ## Defaults to: 0 REDIS_STORAGE_SERVER_DB = 0 ## Redis storage server password ## Defaults to: None REDIS_STORAGE_SERVER_PASSWORD = None ## Ignore Redis storage errors ## Defaults to: True REDIS_STORAGE_IGNORE_ERRORS = True ################################################################################ ################################ Redis Result Storage ################################# ## Redis storage server host ## Defaults to: localhost REDIS_RESULT_STORAGE_SERVER_HOST = 'redis' ## Redis storage server port ## Defaults to: 6379 REDIS_RESULT_STORAGE_SERVER_PORT = 6379 ## Redis storage database index ## Defaults to: 0 REDIS_RESULT_STORAGE_SERVER_DB = 0 ## Redis storage server password ## Defaults to: None REDIS_RESULT_STORAGE_SERVER_PASSWORD = None ## Ignore Redis result storage errors ## Defaults to: True REDIS_RESULT_STORAGE_IGNORE_ERRORS = True ################################################################################ ############################### Memcache Storage ############################### ## List of Memcache storage server hosts ## Defaults to: ['localhost:11211'] MEMCACHE_STORAGE_SERVERS = ['localhost:11211'] ################################################################################ ################################ Mixed Storage ################################# ## Mixed Storage file storage. This must be the full name of a python module ## (python must be able to import it) ## Defaults to: thumbor.storages.no_storage MIXED_STORAGE_FILE_STORAGE = 'thumbor.storages.no_storage' ## Mixed Storage signing key storage. This must be the full name of a python ## module (python must be able to import it) ## Defaults to: thumbor.storages.no_storage MIXED_STORAGE_CRYPTO_STORAGE = 'thumbor.storages.no_storage' ## Mixed Storage detector information storage. This must be the full name of a ## python module (python must be able to import it) ## Defaults to: thumbor.storages.no_storage MIXED_STORAGE_DETECTOR_STORAGE = 'thumbor.storages.no_storage' ################################################################################ ##################################### Meta ##################################### ## The callback function name that should be used by the META route for JSONP ## access ## Defaults to: None META_CALLBACK_NAME = None ################################################################################ ################################## Detection ################################### ## List of detectors that thumbor should use to find faces and/or features. All ## of them must be full names of python modules (python must be able to import ## it) ## Defaults to: [] #DETECTORS = [ #'thumbor.detectors.queued_detector.queued_complete_detector', #'thumbor.detectors.queued_detector.queued_face_detector', #'thumbor.detectors.queued_detector.queued_feature_detector', #'thumbor.detectors.feature_detector', #'thumbor.detectors.face_detector', #] DETECTORS = [] ## The cascade file that opencv will use to detect faces ## Defaults to: haarcascade_frontalface_alt.xml FACE_DETECTOR_CASCADE_FILE = 'haarcascade_frontalface_alt.xml' ## The cascade file that opencv will use to detect glasses. ## Defaults to: 'haarcascade_eye_tree_eyeglasses.xml' GLASSES_DETECTOR_CASCADE_FILE = 'haarcascade_eye_tree_eyeglasses.xml' ## The cascade file that opencv will use to detect profile faces. ## Defaults to: 'haarcascade_profileface.xml' PROFILE_DETECTOR_CASCADE_FILE = 'haarcascade_profileface.xml' ################################################################################ ################################## Optimizers ################################## ## List of optimizers that thumbor will use to optimize images ## Defaults to: [] --\u003e ['thumbor.optimizers.jpegtran',] OPTIMIZERS = [] ## Path for the jpegtran binary ## Defaults to: /usr/bin/jpegtran JPEGTRAN_PATH = '/usr/bin/jpegtran' # Path for the progressive scans file to use with jpegtran optimizer. Implies progressive jpeg output JPEGTRAN_SCANS_FILE = '' PROGRESSIVE_JPEG = True FFMPEG_PATH = '/usr/bin/ffmpeg' # Default path for the docker installation in debian ################################################################################ ################################### Filters #################################### ## List of filters that thumbor will allow to be used in generated images. All of ## them must be full names of python modules (python must be able to import ## it) ## using thumbor's default, unless specified. ################################################################################ ################################ Result Storage ################################ ## Expiration in seconds of generated images in the result storage ## Defaults to: 0 RESULT_STORAGE_EXPIRATION_SECONDS = 0 ## Path where the Result storage will store generated images ## Defaults to: /tmp/thumbor/result_storage RESULT_STORAGE_FILE_STORAGE_ROOT_PATH = '/data/result_storage' ## Indicates whether unsafe requests should also be stored in the Result Storage ## Defaults to: False RESULT_STORAGE_STORES_UNSAFE = False ################################################################################ ############################ Queued Redis Detector ############################# ## Server host for the queued redis detector ## Defaults to: localhost REDIS_QUEUE_SERVER_HOST = 'redis' ## Server port for the queued redis detector ## Defaults to: 6379 REDIS_QUEUE_SERVER_PORT = 6379 ## Server database index for the queued redis detector ## Defaults to: 0 REDIS_QUEUE_SERVER_DB = 0 ## Server password for the queued redis detector ## Defaults to: None REDIS_QUEUE_SERVER_PASSWORD = None ################################################################################ ############################# Queued SQS Detector ############################## ## AWS key id ## Defaults to: None SQS_QUEUE_KEY_ID = None ## AWS key secret ## Defaults to: None SQS_QUEUE_KEY_SECRET = None ## AWS SQS region ## Defaults to: us-east-1 SQS_QUEUE_REGION = 'us-east-1' ################################################################################ #################################### Errors #################################### ## This configuration indicates whether thumbor should use a custom error ## handler. ## Defaults to: False USE_CUSTOM_ERROR_HANDLING = False ## Error reporting module. Needs to contain a class called ErrorHandler with a ## handle_error(context, handler, exception) method. ## Defaults to: thumbor.error_handlers.sentry ERROR_HANDLER_MODULE = 'thumbor.error_handlers.sentry' ## File of error log as json ## Defaults to: None ERROR_FILE_LOGGER = None ## File of error log name is parametrized with context attribute ## Defaults to: False ERROR_FILE_NAME_USE_CONTEXT = False ################################################################################ ############################### Errors - Sentry ################################ ## Sentry thumbor project dsn. i.e.: http://5a63d58ae7b94f1dab3dee740b301d6a:73ee ## a45d3e8649239a973087e8f21f98@localhost:9000/2 ## Defaults to: SENTRY_DSN_URL = '' ################################################################################ ################################### General #################################### # The amount of time to wait before shutting down the server, i.e. stop accepting requests. MAX_WAIT_SECONDS_BEFORE_SERVER_SHUTDOWN = 0 # The amount of time to waut before shutting down all io, after the server has been stopped MAX_WAIT_SECONDS_BEFORE_IO_SHUTDOWN = 0 ## Custom app class to override ThumborServiceApp. This config value is ## overridden by the -a command-line parameter. ## Defaults to: 'thumbor.app.ThumborServiceApp' APP_CLASS = 'thumbor.app.ThumborServiceApp' ################################################################################ ############################## TC_AWS ########################################## TC_AWS_REGION = 'eu-west-1' # AWS Region # Custom S3 endpoint URL (for GCP, Minio, etc.) ### 将默认的Amazon S3地址换成minio运行地址 TC_AWS_ENDPOINT='http://10.18.0.95:9000' ### 将Thumbor的loader换成tc_aws.loaders.s3_loader LOADER = 'tc_aws.loaders.s3_loader' TC_AWS_STORAGE_BUCKET = '' # S3 bucket for Storage TC_AWS_STORAGE_ROOT_PATH = '' # S3 path prefix for Storage bucket TC_AWS_LOADER_BUCKET = '' #S3 bucket for loader TC_AWS_LOADER_ROOT_PATH = '' # S3 path prefix for Loader bucket TC_AWS_RESULT_STORAGE_BUCKET = '' # S3 bucket for result Storage TC_AWS_RESULT_STORAGE_ROOT_PATH = '' # S3 path prefix for Result storage bucket # put data into S3 using the Server Side Encryption functionality to # encrypt data at rest in S3 # https://aws.amazon.com/about-aws/whats-new/2011/10/04/amazon-s3-announces-server-side-encryption-support/ TC_AWS_STORAGE_SSE = False # put data into S3 with Reduced Redundancy # https://aws.amazon.com/about-aws/whats-new/2010/05/19/announcing-amazon-s3-reduced-redundancy-storage/ TC_AWS_STORAGE_RRS = False # Add some randomization in the S3 keys for the Storage and Result Storage. # Defaults to False for Backwards Compatibility, set it to True for performance. TC_AWS_RANDOMIZE_KEYS = False # Enable HTTP Loader as well? # This would allow you to load watermarks in over your images dynamically through a URI # E.g. # http://your-thumbor.com/unsafe/filters:watermark(http://example.com/watermark.png,0,0,50)/s3_bucket/photo.jpg TC_AWS_ENABLE_HTTP_LOADER = False TC_AWS_ALLOWED_BUCKETS = False # List of allowed bucket to be requested TC_AWS_STORE_METADATA = False # Store result with metadata (for instance content-type) ################################################################################ ########################## Google Cloud Storage ################################ CLOUD_STORAGE_BUCKET_ID = '' CLOUD_STORAGE_PROJECT_ID = '' RESULT_STORAGE_CLOUD_STORAGE_PROJECT_ID = '' RESULT_STORAGE_CLOUD_STORAGE_BUCKET_ID = '' ################################################################################ ######################### tc_prometheus ######################################## PROMETHEUS_SCRAPE_PORT = 8000 # Port the prometheus client should listen on ##################### Thumbor Community Extensions ############################# COMMUNITY_EXTENSIONS = [] http://10.18.0.95/unsafe/100x100/test/WechatIMG616.jpeg\nhttp://10.18.0.95/unsafe/200x200/test/WechatIMG616.jpeg\n参考 http://www.4k8k.xyz/article/qq_40065776/108321442\nhttp://www.4k8k.xyz/article/qq_40065776/106039407\nhttps://my.oschina.net/xshuai/blog/5044298\nhttps://segmentfault.com/a/1190000008656825\nhttps://juejin.cn/post/6914237444216864776\n","description":"搭建本地图片服务器","tags":["minio","thumbor"],"title":"LocalImageServer","uri":"/posts/localimageserver/"},{"categories":["devops"],"content":"现象 刷新页面，退出到登录页面,这种情况不定时出现\nlocal storage中到token信息被清理\nfailed to load response data: no data found for resource with given identifier\n原因及解决 错误设置access token 的时间大于 refresh token 时间，\n导致前端认为现在需要清空所有token，重新获取\n但获取的还是老的access token, refresh token 已被清理\n刷新页面，又退出到登录页面\n","description":"刷新页面之后token丢失","tags":["oauth","token"],"title":"请求token为null","uri":"/posts/localstoragelost/"},{"categories":["devops"],"content":"问题 https网站，星巴克、酒店等公共wifi情况下访问会报错：\n你的连接不是私密连接,NET:ERR_CERT_AUTHORITY_INVALID\n其它环境正常\n原因 用https://www.ssllabs.com/ssltest/ 检测网站正常\n网站启用了HSTS，本来是为http跳转到https这步更安全\n但星巴克这种公共wifi 会有个登录页面，打断正常请求，导致浏览器就认为不安全\n解决 关闭hsts\n我们用的是nginx-ingress\n添加nginx-configuration.yaml\napiVersion: v1 kind: ConfigMap metadata: labels: app.kubernetes.io/name: ingress-nginx app.kubernetes.io/part-of: ingress-nginx name: nginx-configuration namespace: ingress-nginx data: hsts: \"false\" kubectl apply -f nginx-configuration.yaml 检测 https://www.ssleye.com/ssltool/hsts_check.html\n","description":"公共wifi访问https报错","tags":["hsts","ssl"],"title":"Public Wifi SSL Notsecure","uri":"/posts/public-wifi-notsecure/"},{"categories":["devops"],"content":"先从阿里云导出域名列表\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  import pandas as pd import socket import ssl import datetime excel_path = './domain.io.xlsx' d = pd.read_excel(excel_path, sheet_name=\"domain.io\") d1 = d[(d.记录类型 != 'MX') \u0026 (d.记录类型 != 'TXT')].主机记录 name=[] for index, row in d1.iteritems(): name.append(row) domain = [i + \".domain.io\" for i in name] def ssl_expiry_datetime(hostname): ssl_date_fmt = r'%b %d%H:%M:%S %Y %Z' context = ssl.create_default_context() conn = context.wrap_socket( socket.socket(socket.AF_INET), server_hostname=hostname, ) # 3 second timeout because Lambda has runtime limitations conn.settimeout(3.0) conn.connect((hostname, 443)) ssl_info = conn.getpeercert() # parse the string from the certificate into a Python datetime object return datetime.datetime.strptime(ssl_info['notAfter'], ssl_date_fmt) for i in domain: try: t=ssl_expiry_datetime(str(i)) print(t,end=' ') print(i) except Exception as e: print(e,end=' ') print(i)   ","description":"SSL Expire Check","tags":["python","SSL"],"title":"Ssl Expire Check","uri":"/posts/ssl-expire-check/"},{"categories":["virtualization"],"content":"现象 ingress snippet 配置之后不生效，如下 增加了一个验证/jOIZN4meSj.txt 的配置，但访问不生效 老的/actuator确实返回403\n nginx.ingress.kubernetes.io/server-snippet: | location = /jOIZN4meSj.txt { return 200 \"17bc5900ff3e50d67ba89514317ac1d0\"; } location ~ /actuator { deny all; } 定位  查看nginx-ingress pod 中 的nginx.conf 配置  对应的域名下面确实没有新增\n location = /jOIZN4meSj.txt { return 200 \"17bc5900ff3e50d67ba89514317ac1d0\"; } 查看 nginx-ingress pod 的日志  W0716 08:31:18.554066 6 controller.go:1089] Server snippet already configured for server \"rc-accounts.test.io\", skipping (Ingress \"test/rc-auth-ingress\") 确定是因为多个yaml 中，包含重复的snippet 配置，导致后面的配置被skip\n修复 同一个域名的snippet 整理到一个yaml 文件中\n","description":"Ingress snippet配置不生效","tags":["k8s","ingress"],"title":"Ingress Snippet Not Work","uri":"/posts/ingress-snippet-not-work/"},{"categories":["devops"],"content":"背景： 前端服务器部署在阿里云ecs，静态资源部署在阿里云cdn，前端server通过proxy_pass访问阿里云CDN\n现象： https://app.creams.io/public/js/rewriteFunc/toFixed.js\n静态资源无法访问\n分析：  怀疑CDN, OSS 存在问题  https://static.creams.io/web-master/public/js/rewriteFunc/toFixed.js\nhttps://creams-static.oss-cn-hangzhou.aliyuncs.com/web-master/public/js/rewriteFunc/toFixed.js\n测试正常\n怀疑前端服务器与阿里云CDN通信不正常，在前端服务器节点测试  https://static.creams.io/web-master/public/js/rewriteFunc/toFixed.js\nhttps://creams-static.oss-cn-hangzhou.aliyuncs.com/web-master/public/js/rewriteFunc/toFixed.js\n测试正常\n前端服务器本地请求  https://app.creams.io/public/js/rewriteFunc/toFixed.js\nhttp://localhost:8889/public/js/rewriteFunc/toFixed.js\n失败\n查看nginx错误日志\n 2021/01/25 01:38:15 [error] 7#7: *825 upstream timed out (110: Operation timed out) while connecting to upstream, client: 127.0.0.1, server: , request: “GET /public/js/rewriteFunc/toFixed.js HTTP/1.1”, upstream: “https://114.80.187.99:443/web-master/public/js/rewriteFunc/toFixed.js”, host: “localhost:8889”\n 114.80.187.99与本地PING解析不一致\n发阿里云工单，确认114.80.187.99CDN节点已下线，但nginx dns cache导致一直请求已下线节点\n解决 ngin 增加配置resovler，指向阿里云公共dns\n resolver 223.5.5.5 223.6.6.6;\n 参考 https://www.nadeau.tv/post/nginx-proxy_pass-dns-cache/\n","description":"前端访问阿里云cdn静态资源失败","tags":["alicloud","cdn"],"title":"前端访问阿里云cdn静态资源失败","uri":"/posts/alicloud-cdn-offline/"},{"categories":["devops"],"content":"问题： yapi 模仿请求https://www.alipay.com 的时候报错：\nwrite EPROTO 140447099377472:error:1408F10B:SSL routines:ssl3_get_record:wrong version number:ssl/record/ssl3_record.c:332:\n直接请求没有问题\n另外请求https://www.baidu.com的时候没有问题\n解决： 使用https://www.ssllabs.com/ssltest/对比了一下两个站点，发现最低ssl版本要求不一样\n怀疑浏览器兼容tls1.2,但yapi用nodejs 作为客户端请求https://www.alipay.com 的过程中协商 tls协议出问题\n先怀疑nodejs 10 不支持tls 1.3 导致，升级至 nodej 12，未解决问题\n设置NODE_OPTIONS=–tls-min-v1.2,强制版本为tls1.2 node server/app.js 后ok\n参考： https://nodejs.org/api/tls.html#tls_modifying_the_default_tls_cipher_suite\nhttps://nodejs.org/api/cli.html#cli_node_options_options\n","description":"解决Yapi模拟测试SSL不兼容问题","tags":["yapi","ssl"],"title":"Yapi Ssl","uri":"/posts/yapi-ssl/"},{"categories":["devops"],"content":"问题 想给所有的service增加maven git-commit-id-plugin,实现版本与代码关联\n微服务代码使用了git的submodule批量管理\n解决 pom.xml 需要增加以下依赖,保存为/tmp/add.xml\n \u003cplugin\u003e \u003cgroupId\u003epl.project13.maven\u003c/groupId\u003e \u003cartifactId\u003egit-commit-id-plugin\u003c/artifactId\u003e \u003cversion\u003e4.0.0\u003c/version\u003e \u003cexecutions\u003e \u003cexecution\u003e \u003cid\u003eget-the-git-infos\u003c/id\u003e \u003cphase\u003einitialize\u003c/phase\u003e \u003cgoals\u003e \u003cgoal\u003erevision\u003c/goal\u003e \u003c/goals\u003e \u003c/execution\u003e \u003c/executions\u003e \u003cconfiguration\u003e \u003cdotGitDirectory\u003e${project.basedir}/.git\u003c/dotGitDirectory\u003e \u003cverbose\u003efalse\u003c/verbose\u003e \u003cdateFormat\u003eyyyy-MM-dd HH:mm:ss\u003c/dateFormat\u003e \u003cprefix\u003egit\u003c/prefix\u003e \u003cgenerateGitPropertiesFile\u003etrue\u003c/generateGitPropertiesFile\u003e \u003cgenerateGitPropertiesFilename\u003e${project.build.outputDirectory}/git.properties\u003c/generateGitPropertiesFilename\u003e \u003cformat\u003ejson\u003c/format\u003e \u003cgitDescribe\u003e \u003cskip\u003efalse\u003c/skip\u003e \u003calways\u003efalse\u003c/always\u003e \u003cdirty\u003e-dirty\u003c/dirty\u003e \u003c/gitDescribe\u003e \u003c/configuration\u003e \u003c/plugin\u003e 批量修改\n创建 ~/.netrc 避免手动输入用户名、密码\nmachine git.souban.io login username password password git clone https://git.souban.io/Server/CREAMS/creams-microservices.git cd creams-microservices git checkout release git submodule update --init --recursive git submodule foreach 'git checkout release' git submodule foreach 'git pull' git status git submodule status find ./*-service -name \"pom.xml\" | xargs sed -i \"/\u003cplugins\u003e/r /tmp/add.xml\" git submodule foreach 'git commit -am \"feat(maven): add git-commit-id-plugin\" || :' git submodule foreach 'git push || :' git commit -am 'update' git push --recurse-submodules=check ","description":"批量安装maven git-commit-id插件","tags":["maven","shell"],"title":"Patch Git Commit Id Plugin","uri":"/posts/patch-git-commit-id-plugin/"},{"categories":["devops"],"content":"在mac上用packer基于iso制作centos7 aws ami镜像\ninstall visualbox \u0026 packer visualbox: 6.0\npacker: 1.6.1\npacker安装比较简单，省略安装过程\n生成kickstart文件 先用visualbox的虚拟机手动安装一遍操作系统，根据生成的/root/anaconda-ks.cfg稍微改动生成自己要的kickstart文件\n默认用户centos密码centos\nmkdir http cp ./centos7.8-ks.cfg ./http ks.cfg\n#version=DEVEL # System authorization information auth --enableshadow --passalgo=sha512 # Use CDROM installation media cdrom # Use graphical install text # Run the Setup Agent on first boot firstboot --enable ignoredisk --only-use=sda # Keyboard layouts keyboard --vckeymap=us --xlayouts='us' # System language lang en_US.UTF-8 --addsupport=zh_CN.UTF-8 # Network information network --bootproto=dhcp --device=eth0 --onboot=on --ipv6=auto --activate network --hostname=localhost.localdomain # Root password rootpw --iscrypted $6$coVd7Fm.ScyzVI0Z$/N26LC6qv.Pm7fOaZRww7YO4gNaQlQUyfnR1vNCigHXx./uTDegDgeOvLh7KZ0M6mfBqs.f1BEEKu9zvTRz2b1 # System services services --enabled=\"chronyd\" # System timezone timezone Asia/Shanghai --isUtc user --name=centos --password=$6$WULB6LDSYWKEQKLC$WUsTHeafI/8QW0t9b9kvWGCMgfntdSTR.DLSqMHw4.5TiH6i92qwmBXyJ5KiotpitKrc1WWI.1vWATP4kMJz.0 --iscrypted --gecos=\"centos\" # System bootloader configuration bootloader --append=\" crashkernel=auto\" --location=mbr --boot-drive=sda # Partition clearing information clearpart --none --initlabel # Disk partitioning information part / --fstype=\"ext4\" --ondisk=sda --size=8191 %packages @^minimal @core chrony kexec-tools %end %addon com_redhat_kdump --enable --reserve-mb='auto' %end %anaconda pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty %end %post echo \"centos ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers.d/centos echo \"Defaults:centos !requiretty\" \u003e\u003e /etc/sudoers.d/centos chmod 0440 /etc/sudoers.d/centos %end aws 创建 s3 artisan-packer-image-s3 创建 import role 没有创建相关role的话，可以上次镜像文件到S3，但不能转成ami\ntrust-policy.json\n{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"vmie.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\", \"Condition\": { \"StringEquals\":{ \"sts:Externalid\": \"vmimport\" } } } ] } aws iam create-role --role-name vmimport --assume-role-policy-document \"file:///jumen/work/aws/vmimport/trust-policy.json\" role-policy.json\n用的中国大陆宁夏区域，所以s3的ARN比较特殊，以aws-cn开头,不是默认的aws\n{ \"Version\":\"2012-10-17\", \"Statement\":[ { \"Effect\": \"Allow\", \"Action\": [ \"s3:GetBucketLocation\", \"s3:GetObject\", \"s3:ListBucket\" ], \"Resource\": [ \"arn:aws-cn:s3:::artisan-packer-image-s3\", \"arn:aws-cn:s3:::artisan-packer-image-s3/*\" ] }, { \"Effect\": \"Allow\", \"Action\": [ \"s3:GetBucketLocation\", \"s3:GetObject\", \"s3:ListBucket\", \"s3:PutObject\", \"s3:GetBucketAcl\" ], \"Resource\": [ \"arn:aws-cn:s3:::artisan-packer-image-s3\", \"arn:aws-cn:s3:::artisan-packer-image-s3/*\" ] }, { \"Effect\": \"Allow\", \"Action\": [ \"ec2:ModifySnapshotAttribute\", \"ec2:CopySnapshot\", \"ec2:RegisterImage\", \"ec2:Describe*\" ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"kms:CreateGrant\", \"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\" ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"license-manager:GetLicenseConfiguration\", \"license-manager:UpdateLicenseSpecificationsForResource\", \"license-manager:ListLicenseSpecificationsForResource\" ], \"Resource\": \"*\" } ] } aws iam put-role-policy --role-name vmimport --policy-name vmimport --policy-document \"file:///jumen/work/aws/vmimport/role-policy.json\" packer centos_7.08_64_8G.json\n{ \"description\": \"Bare CentOS 7 prepped for AMI import\", \"variables\": { \"aws_access_key\": \"{{env `AWS_ACCESS_KEY_ID`}}\", \"aws_secret_key\": \"{{env `AWS_SECRET_ACCESS_KEY`}}\", \"iso_url\": \"https://mirrors.aliyun.com/centos/7.8.2003/isos/x86_64/CentOS-7-x86_64-Minimal-2003.iso\", \"iso_checksum\": \"659691c28a0e672558b003d223f83938f254b39875ee7559d1a4a14c79173193\", \"iso_checktype\": \"sha256\", \"ssh_username\": \"centos\", \"ssh_password\": \"centos\", \"vm_name\": \"CentOS7.8-Minimal\", \"disk_size\": \"8192\", \"memory\": \"4192\", \"cpus\": \"2\" }, \"builders\": [{ \"type\": \"virtualbox-iso\", \"guest_os_type\": \"RedHat_64\", \"iso_url\": \"{{user `iso_url`}}\", \"iso_checksum\": \"{{user `iso_checktype`}}:{{user `iso_checksum`}}\", \"ssh_username\": \"{{user `ssh_username`}}\", \"ssh_password\": \"{{user `ssh_password`}}\", \"ssh_wait_timeout\": \"10000s\", \"shutdown_command\": \"sudo -S shutdown -P now\", \"vm_name\": \"{{user `vm_name`}}\", \"disk_size\": \"{{user `disk_size`}}\", \"output_directory\": \"output-{{user `vm_name`}}\", \"http_directory\": \"http\", \"boot_command\": [\"\u003ctab\u003e text ks=http://{{.HTTPIP}}:{{.HTTPPort}}/centos7.8-ks.cfg\u003center\u003e\u003cwait\u003e\"], \"format\": \"ova\", \"vboxmanage\": [ [\"modifyvm\", \"{{.Name}}\", \"--memory\", \"{{user `memory`}}\"], [\"modifyvm\", \"{{.Name}}\", \"--cpus\", \"{{user `cpus`}}\"] ] }], \"post-processors\": [{ \"type\": \"amazon-import\", \"access_key\": \"{{user `aws_access_key`}}\", \"secret_key\": \"{{user `aws_secret_key`}}\", \"region\": \"cn-northwest-1\", \"s3_bucket_name\": \"artisan-packer-image-s3\", \"license_type\": \"BYOL\", \"tags\": { \"Description\": \"packer amazon import \" } }] } export AWS_ACCESS_KEY_ID=XXX export AWS_SECRET_ACCESS_KEY=YYY packer validate centos_7.08_64_8G.json packer build centos_7.08_64_8G.json reference http://work.haufegroup.io/automate-ami-with-packer/\nhttps://github.internet2.edu/docker/packer-centos-7/blob/master/aws-centos7-base.json\nhttps://github.com/allyunion/packer-aws-centos7/blob/master/aws-centos7-base.json\nhttps://github.com/irvingpop/packer-chef-highperf-centos-ami/blob/master/create_base_ami/packer.json\nhttps://github.com/allyunion/packer-aws-centos7\nhttp://technologist.pro/devops/infrastructure-as-code-create-linux-rhelcentos-base-images-using-packer\n问题  Waiting for SSH to become available  刚开始用的visulbox no-gui模式，无法定位问题，后面直接用GUI模式安装\n   Post-processor failed: Failed to start import from s3://artisan-packer-image-s3/packer-import-1597042426.ova: retry count exhausted. Last err: InvalidParameter: The service role vmimport provided does not exist or does not have sufficient permissions status code: 400, request id: 4456c33c-4174-4ee0-b7fd-6b784ab20167  aws s3 转为 ami 需要特定role\n  An error occurred (MalformedPolicyDocument) when calling the PutRolePolicy operation: Partition “aws” is not valid for resource “arn:aws:s3:::artisan-packer-image-s3”.\n中国宁夏区域 特殊： 前缀为aws-cn\n","description":"packer基于iso制作centos7 aws ami镜像","tags":["packer"],"title":"Packer Build Centos7 Ami","uri":"/posts/packer-build-centos7-ami/"},{"categories":["virtualization"],"content":"problem k8s 1.17二进制部署安装，安装istio 1.6.0的时候碰到以下报错\n configmap “istio-ca-root-cert” not found\n  MountVolume.SetUp failed for volume “istio-token” : failed to fetch token: the API server does not have TokenRequest endpoints enabled\n  2020-06-10T13:51:44.017157Z warn serverca Authentication failed: Authenticator ClientCertAuthenticator at index 0 got error: no verified chain is found. Authenticator KubeJWTAuthenticator at index 1 got error: failed to validate the JWT: the service account authentication returns an error: [invalid bearer token, square/go-jose: error in cryptographic primitive]. Authenticator ClientCertAuthenticator at index 2 got error: no verified chain is found. 2020-06-10T13:51:44.017202Z warn serverca request authentication failure 2020-06-10T13:51:44.122245Z info grpc: Server.Serve failed to complete security handshake from “172.23.0.231:51822”: EOF 2020-06-10T13:51:44.821641Z info grpc: Server.Serve failed to complete security handshake from “172.23.144.6:49404”: remote error: tls: error decrypting message\n 同一个问题引起: k8s api server缺少service account相关配置或者配置错误\n正确配置(证书路径根据实际情况配置)：\n --service-account-signing-key-file=/etc/kubernetes/certs/kubernetes-key.pem \\ --service-account-key-file=/etc/kubernetes/certs/kubernetes.pem \\ --service-account-issuer=api \\ --service-account-api-audiences=api,vault,factors \\ 重启k8s api server\n安装istio 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # 安装istio wget https://github.com/istio/istio/releases/download/1.6.1/istio-1.6.1-linux-amd64.tar.gz tar -zxvf istio-1.6.1-linux-amd64.tar.gz cd istio-1.6.1 cp bin/istioctl /usr/local/bin/ cp tools/istioctl.bash ~/ ~/.bashrc 增加 source ~/istioctl.bash source ~/.bashrc istioctl manifest versions istioctl manifest generate --set profile=default \\  --set values.gateways.istio-ingressgateway.type=NodePort \\  --set components.cni.enabled=true \\  --set values.cni.cniBinDir='/opt/cni/bin' \\  --set values.cni.cniConfDir='/etc/cni/net.d' \\  --set components.cni.namespace=kube-system \u003e generated-manifest.yaml kubectl apply -f generated-manifest.yaml istioctl verify-install -f ./generated-manifest.yaml   1 2  # 卸载istio istioctl manifest generate --set profile=default | kubectl delete -f -   reference https://www.cnblogs.com/charlieroro/p/12857372.html\nhttps://mp.weixin.qq.com/s/DrvBEVpMMt1pJBKPbyPcyQ\n","description":"Istio 1.6安装问题记录","tags":["istio"],"title":"Istio 1.6安装问题记录","uri":"/posts/istio-1.6-install/"},{"categories":["application"],"content":"方案 github搭建个人博客\n  常用的生成器有hugo、hexo、jekyll,google对比了一下，hugo简单又快，就采用了hugo\n  github pages有几种类型: user pages、project pages等\nuser pages: repository name必须是{username}.github.com, 只存放生成的静态网站，需要有另外一个repository存放代码，不能指定pages的分支或者路径\nproject pages: repository name不是{username}.github.com就可以，代码和生成的静态网站可以存放在一个repository,生成的静态网站可以是一个目录或者一个分支(常用gh-page)\n  deploy\n脚本: huogo有样例，通过手动触发部署\nci: travis ci等，push 代码的时候，自动部署\n  result\n先用project pages的分支方式部署成功，觉得有点复杂，换成了user pages,最终方案hugo+github user pages+travis ci\n  hugo mac系统安装 1 2  brew install hugo hugo version   create site 1 2 3 4 5 6 7 8 9  hugo new site life6585 cd life6585 git init # 可以从https://themes.gohugo.io/选择主题 git submodule add --depth 1 https://github.com/reuixiy/hugo-theme-meme.git themes/meme rm config.toml \u0026\u0026 cp themes/meme/config-examples/en/config.toml config.toml hugo new \"posts/hello-world.md\" hugo new \"about/_index.md\" hugo server -D   通过http://localhost:1313预览\ngithub github 创建 repository: life6585,用做代码仓库 ，事先加好github ssh-key\npush to github\n1 2 3 4 5 6  git add . git commit -m \"first commit\" git remote add origin git@github.com:mylife6585/life6585.git git config user.name \"life6585\" git config user.email \"life85@126.com\" git push --set-upstream origin master   github 创建 repo: mylife6585.github.com,用做网站仓库\n1 2  echo \"public\" \u003e\u003e .gitignore git submodule add git@github.com:mylife6585/mylife6585.github.com.git public   deploy 1. script 可以通过脚本手动推送网站到github\n增加deploy.sh\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  #!/bin/sh  # If a command fails then the deploy stops set -e printf \"\\033[0;32mDeploying updates to GitHub...\\033[0m\\n\" # Build the project. hugo # if using a theme, replace with `hugo -t \u003cYOURTHEME\u003e` # Go To Public folder cd public # Add changes to git. git add . # Commit changes. msg=\"rebuilding site $(date)\" if [ -n \"$*\" ]; then msg=\"$*\" fi git commit -m \"$msg\" # Push source and build repos. git push origin master   2. travis ci 也可以通过travis ci自动部署\ngithub增加personal access tokens , 通过github账号登陆travis ci , 管理repository，并添加$GITHUB_TOKEN 环境变量\n代码仓库life6585增加.traivs.yml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  language:gogit:depth:1install:- wgethttps://github.com/gohugoio/hugo/releases/download/v0.72.0/hugo_0.72.0_Linux-64bit.deb- sudodpkg-ihugo*.debscript:- hugodeploy:provider:pagesskip_cleanup:truelocal_dir:publicgithub_token:$GITHUB_TOKENon:branch:masterrepo:mylife6585/mylife6585.github.comtarget_branch:masteremail:deploy@travis-ci.orgname:deployment-bot  README.md 增加traivs ci build status\nreference https://zyfdegh.github.io/post/201705-how-i-setup-hugo/\nhttps://themes.gohugo.io/hugo-theme-meme/\nhttps://gohugo.io/hosting-and-deployment/hosting-on-github/\nhttps://mogeko.me/2018/018/\nhttps://gohugo.io/hosting-and-deployment/hosting-on-github/\nhttps://zhuanlan.zhihu.com/p/37752930\nhttps://dev.to/zaracooper/create-your-developer-portfolio-using-hugo-and-github-pages-35en\nhttps://medium.com/swlh/hosting-a-hugo-blog-on-github-pages-with-travis-ci-e74a1d686f10\nhttps://mogeko.me/2018/028/\nhttps://zyfdegh.github.io/post/201705-how-i-setup-hugo/\nhttp://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html\nproblem   github project pages和user page的区别\nuser pages的repository name 特殊，为{username}.github.com,并且github pages不能设置路径或者branch\n  hugo文章不显示\n去掉文章中的draft\n  博客更新之后,github pages的custom domain失效\n增加static/CNAME文件，内容为自己的custom domain, 参考官网\n  ","description":"使用hugo、github pages搭建个人blog","tags":["hugo","github","travis"],"title":"Hugo Github Blog Deploy","uri":"/posts/hugo-github-blog-deploy/"}]
